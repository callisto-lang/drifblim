( usage: cat file.tal | drifloon.rom > output.rom )

|10 @Console &vector $2 &read $1 &pad $4 &type $1 &write $1 &error $1

|0000

|0100

@on-reset ( -> )
	;on-console .Console/vector DEO2
	BRK

@on-console ( -> )
	.Console/read DEI DUP ?{
		POP <assemble>
		#010e DEO
		BRK }
	<read>
	BRK

@<read> ( chr -- )
	( normalize ) #20 GTHk [ JMP SWP POP ]
	( join ) [ LIT &last 20 ] OVR ,&last STR
	( skip ) DUP2 #2020 NEQ2 ?{ POP2 JMP2r }
	#20 NEQ ?{
		DUP [ LIT "[ ] EQU ?&skip
		DUP [ LIT "] ] EQU ?&skip
		DUP [ LIT "( ] EQU ?toggle-mute
		DUP [ LIT ") ] EQU ?toggle-mute }
	[ LIT &mute 00 ] ?{ &skip POP JMP2r }
	!<append>

@toggle-mute ( chr -- )
	[ LIT "( ] SUB ;<read>/mute STA
	JMP2r

@<append> ( chr -- )
	( join ) [ LIT &last 20 ] OVR ,&last STR
	( skip ) DUP2 #2020 NEQ2 ?{ POP2 JMP2r }
	POP #00 [ LIT2 &ptr =tal ] STA2k INC2 ,&ptr STR2
	POP2 JMP2r

@<assemble> ( -- )
	;tal <pstr>
	#0a18 DEOk DEO
	JMP2r

@<pstr> ( str* -- )
	LDAk #18 DEO
	INC2 & LDAk ?<pstr>
	POP2 JMP2r

@<phex> ( short* -- )
	SWP <phex>/b
	&b ( -- )
		DUP #04 SFT <phex>/c
	&c ( -- )
		#0f AND DUP #09 GTH #27 MUL ADD [ LIT "0 ] ADD #18 DEO
		JMP2r

@tal


