( Drifblim )

|0010 @Console &vector $2 &read $1 &pad $5 &write $1 &error $1
|00a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|0000

	@src $40
	@token $30
	@scope $30
	@buf $30
	@sleep $1
	@s &ptr $2
	@r &ptr $2
	@p &ptr $2 &len $2

|0100

	;on-console .Console/vector DEO2

BRK

@on-console ( -> )

	;src STH2

	.Console/read DEI
	DUP #20 LTH OVR #7f GTH ORA ,&end JCN
	STH2kr ;slen JSR2 #003f GTH2 ,&end JCN
		STH2kr ;scap JSR2 STA POP2r BRK
		&end
	POP

	( assemble tokens )

	STH2kr .File/name DEO2
	#0001 .File/length DEO2
	&stream
		;&c
			DUP2 .File/read DEO2
			( comment )
			LDAk #28 NEQ ,&no-sleep JCN
				#01 .sleep STZ ,&no-cap JMP
				&no-sleep
			LDAk #29 NEQ ,&no-wake JCN
				#00 .sleep STZ ,&no-cap JMP
				&no-wake
			.sleep LDZ ,&no-cap JCN
			( listen )
			LDAk #21 LTH ,&no-put JCN
				LDAk ;token ;scap JSR2 STA
				&no-put
			LDAk #20 GTH ,&no-cap JCN
				;token
					DUP2 ;find-token JSR2
					#0030 ;mclr JSR2
				&no-cap
		POP2
		.File/success DEI2 ORA ,&stream JCN

	( resolve references )

	;ref
	&while
		DUP2 ,resolve-reference JSR
		( eol )
		INC2 INC2 ;scap JSR2 INC2 INC2k INC2 LDA ,&while JCN
	POP2

	( make rom )

	( change ext ) ;&rom-ext STH2kr ;scap JSR2 #0003 SUB2 ;scpy JSR2
	STH2r .File/name DEO2
	.p/len LDZ2 #0100 SUB2 .File/length DEO2
	;dst/clip .File/write DEO2

	( debug ) #010e DEO
	( halt ) #010f DEO

BRK
	&c $1
	&rom-ext "rom $1

@resolve-reference ( ref* -- )

	STH2k
	INC2 INC2 INC2k ,find-label JSR LDA2 STH2
	( rune )
	LDAk LIT '. EQU ,&on-litzp JCN
	LDAk LIT ', EQU ,&on-litrel JCN
	LDAk LIT '; EQU ,&on-litabs JCN
	LDAk LIT ': EQU ,&on-rawabs JCN
	;err/reslv ;print-error JSR2
	POP2r
	POP2r

JMP2r
	&on-litzp STH2r NIP STH2r LDA2 ;dst ADD2 STA POP2 JMP2r
	&on-litrel STH2r STH2kr LDA2 SUB2 #0002 SUB2 NIP STH2r LDA2 ;dst ADD2 STA POP2 JMP2r
	&on-litabs STH2r STH2r LDA2 ;dst ADD2 STA2 POP2 JMP2r
	&on-rawabs STH2r STH2r LDA2 ;dst ADD2 STA2 POP2 JMP2r

@find-label ( name* -- addr* )

	STH2
	;sym
	&while
		( test ) INC2k INC2 STH2kr ;scmp JSR2 ,&on-found JCN
		( go eol ) INC2 INC2 ;scap JSR2 INC2 INC2k INC2 LDA ,&while JCN
	POP2
	STH2r ;err/label ;print-error JSR2
	#0000

JMP2r
	&on-found POP2r JMP2r

@find-token ( token* -- )

	( skip blank ) 
	;slen JSR2 ORA #01 JCN JMP2r

	( runic )
	;runes/end ;runes
	&loop
		LDAk ;token LDA NEQ ,&continue JCN
			INC2k LDA2 ;token SWP2 JSR2
			POP2 POP2 JMP2r
			&continue
		INC2 INC2 INC2 GTH2k ,&loop JCN
	POP2 POP2

	( special )
	;token
		DUP2 ;is-opcode JSR2 ,&on-opcode JCN
		DUP2 ;slen JSR2 #0004 EQU2 ,&on-short JCN
		DUP2 ;slen JSR2 #0002 EQU2 ,&on-byte JCN
	;err/token ;print-error JSR2

JMP2r
	&on-opcode ;find-opcode JSR2 ;write-byte JMP2
	&on-short ;sshort JSR2 ;write-short JMP2
	&on-byte ;sbyte JSR2 ;write-byte JMP2

( runic )

( TODO INC2 globally )

@do-lithex ( t* -- )

	INC2k ;slen JSR2 #0004 EQU2 ,&on-short JCN
	INC2k ;slen JSR2 #0002 EQU2 ,&on-byte JCN
	;err/lithx ;print-error JSR2

JMP2r
	&on-short INC2 ;sshort JSR2 ;write-litshort JMP2
	&on-byte INC2 ;sbyte JSR2 ;write-litbyte JMP2

@do-padabs ( t* -- ) INC2 ;shex JSR2 .p/ptr STZ2 JMP2r
@do-padrel ( t* -- ) .p/ptr LDZ2 SWP2 INC2 ;shex JSR2 ADD2 .p/ptr STZ2 JMP2r
@do-plabel ( t* -- ) ;scope STH2k #0030 ;mclr JSR2 INC2k STH2r ;scpy JSR2 INC2 .p/ptr LDZ2 ,create-label JMP
@do-slabel ( t* -- ) INC2 ;make-sublabel JSR2 .p/ptr LDZ2 ,create-label JMP
@do-litbyt ( t* -- ) .p/ptr LDZ2 INC2 ,create-reference JSR #ff ;write-litbyte JMP2
@do-litabs ( t* -- ) .p/ptr LDZ2 INC2 ,create-reference JSR #ffff ;write-litshort JMP2
@do-rawabs ( t* -- ) .p/ptr LDZ2 ,create-reference JSR #ffff ;write-short JMP2
@do-rawchr ( t* -- ) INC2 LDA ;write-byte JMP2
@do-rawstr ( t* -- ) INC2 &w LDAk ;write-byte JSR2 INC2 LDAk ,&w JCN POP2 JMP2r
@do-ignore ( t* -- ) POP2 JMP2r

@create-label ( name* addr* -- )

	( LIT '@ #18 DEO DUP2 ;print JSR2 #20 #18 DEO OVR2 ;print-str JSR2 #0a #18 DEO )

	( write ref )
	;sym .s/ptr LDZ2 STH2k ADD2 STA2
	INC2r INC2r
	( write string )
	DUP2 ;sym STH2kr ADD2 ;scpy JSR2
	;slen JSR2 STH2 ADD2r INC2r STH2r .s/ptr STZ2

JMP2r

@create-reference ( name* addr* -- )

	( LIT '- #18 DEO DUP2 ;print JSR2 #2018 DEO [ STH ] OVR2 ;print-str JSR2 #0a18 DEO [ STHr ] )

	( addr )
	;ref .r/ptr LDZ2 STH2k ADD2 STA2
	( rune )
	INC2r INC2r
	LDAk ;ref STH2kr ADD2 STA
	INC2r INC2
	( sublabel )
	LDAk LIT '& NEQ ,&no-sublabel JCN
		INC2 ,make-sublabel JSR
		&no-sublabel
	( write string )
	DUP2 ;ref STH2kr ADD2 ;scpy JSR2
	;slen JSR2 STH2 ADD2r INC2r STH2r .r/ptr STZ2

JMP2r

@make-sublabel ( name* -- sublabel* )

	;buf STH2k #0030 ;mclr JSR2
	;scope STH2kr ;scpy JSR2
	LIT '/ STH2kr ;scap JSR2 STA
	STH2kr ;scat JSR2
	STH2r

JMP2r

@write-litbyte ( byte -- )

	( LITk ) #80 SWP ,write-short JSR

JMP2r

@write-litshort ( short* -- )

	( LIT2k ) #a0 ,write-byte JSR

@write-short ( short -- )

	SWP ,write-byte JSR

@write-byte ( byte -- )

	;dst .p/ptr LDZ2 STH2k ADD2 STA
	INC2r STH2kr .p/ptr STZ2
	STH2r .p/len STZ2

JMP2r

@is-opcode ( string* -- bool )

	DUP2 ;opcodes/brk ,scmp3 JSR ,find-opcode/on-brk JCN

@find-opcode ( name* -- byte )

	STH2
	#2000
	&loop
		#00 OVR #0003 MUL2 ;opcodes ADD2 STH2kr ,scmp3 JSR ,&on-found JCN
		INC GTHk ,&loop JCN
	POP2
	POP2r
	#00

JMP2r
	&on-found NIP STH2r ,find-mode JSR ADD JMP2r
	&on-brk POP2 #01 JMP2r

@find-mode ( mode* -- byte )

	LITr 00
	;opcodes OVR2 ,scmp3 JSR #70 SFT STH ADDr
	INC2 INC2 INC2
	LDAk #00 EQU ,&end JCN
	&while
		LDAk LIT '2 EQU #50 SFT STH ADDr
		LDAk LIT 'r EQU #60 SFT STH ADDr
		LDAk LIT 'k EQU #70 SFT STH ADDr
		INC2 LDAk ,&while JCN
	&end
	POP2
	STHr

JMP2r

@scmp3 ( a* b* -- bool )

	LDAk STH INC2 SWP2 LDAk STH INC2 EQUr
	LDAk STH INC2 SWP2 LDAk STH INC2 EQUr
	LDA STH LDA STH EQUr
	ADDr ADDr STHr #03 EQU

JMP2r

@sshort ( str* -- short* )

	INC2k INC2 ,sbyte JSR STH
	,sbyte JSR STHr

JMP2r

@sbyte ( str* -- byte )

	LDAk ,chex JSR STH
	INC2 LDA ,chex JSR
	STHr #40 SFT ADD

JMP2r

@shex ( str* -- short* )

	LIT2r 0000
	&while
		LITr 40 SFT2r
		LITr 00
		LDAk ,chex JSR STH ADD2r
		INC2 LDAk ,&while JCN
	POP2
	STH2r

JMP2r

@chex ( char -- value )

	DUP #2f GTH OVR #3a LTH AND ,&number JCN
	DUP #60 GTH OVR #67 LTH AND ,&lc JCN
		POP #00

JMP2r
	&number #30 SUB JMP2r
	&lc #57 SUB JMP2r

( helpers )

@mclr ( addr* len* -- )

	OVR2 ADD2 SWP2
	&loop
		STH2k #00 STH2r STA
		INC2 GTH2k ,&loop JCN
	POP2 POP2

JMP2r

@slen ( str* -- len* )

	DUP2 ,scap JSR SWP2 SUB2

JMP2r

@scap ( str* -- str-end* )

	LDAk #00 NEQ JMP JMP2r
	&while INC2 LDAk ,&while JCN

JMP2r

@scat ( src* dst* -- )

	DUP2 ,slen JSR ADD2

@scpy ( src* dst* -- )
	
	STH2
	&while
		LDAk STH2kr STA INC2r
		INC2 LDAk ,&while JCN
	POP2
	#00 STH2r STA

JMP2r

@scmp ( a* b* -- flag )

	STH2
	&loop
		LDAk LDAkr STHr NEQ ,&end JCN
		LDAk LDAkr STHr ORA ,&not-end JCN
			POP2 POP2r #01 JMP2r
			&not-end
		INC2 INC2r ,&loop JMP
	&end
	POP2 POP2r #00

JMP2r

@print-error ( token* error* -- )

	LIT '! #18 DEO
	SWP2 ,print-str JSR #2018 DEO

@print-str ( str* -- )

	&while
		LDAk #18 DEO
		INC2 LDAk ,&while JCN
	POP2

JMP2r

( tables )

@opcodes
	"LIT "INC "POP "DUP "NIP "SWP "OVR "ROT
	"EQU "NEQ "GTH "LTH "JMP "JCN "JSR "STH
	"LDZ "STZ "LDR "STR "LDA "STA "DEI "DEO
	"ADD "SUB "MUL "DIV "AND "ORA "EOR "SFT
	&brk "BRK

@err
	&lithx "LITHX $1 &label "LABEL $1
	&token "TOKEN $1 &reslv "RESLV $1

@runes
	'| :do-padabs	'$ :do-padrel
	'@ :do-plabel	'& :do-slabel
	'. :do-litbyt	', :do-litbyt	
	'; :do-litabs	': :do-rawabs	
	'' :do-rawchr	'" :do-rawstr	
	'[ :do-ignore	'] :do-ignore	
	'# :do-lithex 	&end

( buffers )

@sym $4000
@ref $4000
@dst $0100 &clip
